shallow_clone: true

platform:
  - x86
  - x64

configuration:
  - Debug
  - Release

image:
  - Visual Studio 2017

clone_script:
- ps: |
    if(-not $env:appveyor_pull_request_number) {
        git clone -q --branch=$env:appveyor_repo_branch https://github.com/$env:appveyor_repo_name.git $env:appveyor_build_folder
        git checkout -qf $env:appveyor_repo_commit
    } else {
        git clone -q https://github.com/$env:appveyor_repo_name.git $env:appveyor_build_folder
        git fetch -q origin +refs/pull/$env:appveyor_pull_request_number/merge:
        git checkout -qf FETCH_HEAD
    }

# https://www.appveyor.com/docs/build-environment/#boost 

environment:
    MSVC_DEFAULT_OPTIONS: ON
    BOOST_FILENAME_VERSION: 1_58_0
    BOOST_VERSION: 1.58.0
    CONFIGURATION_COMPLETE: False
    matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      CMAKE_GENERATOR: Visual Studio 14 2015
      VISUAL_STUDIO_INTERNAL_VERSION: 140
      VISUAL_STUDIO_VERSION: 14.0
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      CMAKE_GENERATOR: Visual Studio 15 2017
      VISUAL_STUDIO_INTERNAL_VERSION: 141
      VISUAL_STUDIO_VERSION: 14.1


before_build:
  - ps: |
      mkdir build
      cd build
      $env:generator="Visual Studio 15 2017"
      If ($env:Platform -Match "x86") {
        $env:ARCHITECTURE="32"
      } Else {
        $env:ARCHITECTURE="64"
        $env:CMAKE_GENERATOR_SUFFIX=" Win64"
      }

      $env:BOOST_ROOT="C:/Libraries/boost_$($env:BOOST_FILENAME_VERSION)"
      $env:BOOST_INCLUDEDIR="$($env:BOOST_ROOT)"
      $env:BOOST_LIBRARYDIR="$($env:BOOST_ROOT)/$($env:LIB_ARCHITECTURE)-msvc-$($env:VISUAL_STUDIO_VERSION)"
      $env:BOOST_ARCHIVE="boost_$($env:BOOST_FILENAME_VERSION)-bin-msvc-$($env:VISUAL_STUDIO_VERSION)-$($env:ARCHITECTURE).7z"

      echo cmake -G "$($env:CMAKE_GENERATOR)$($env:CMAKE_GENERATOR_SUFFIX)"   -DCMAKE_BUILD_TYPE="$($env:CONFIGURATION)" -DBOOST_ROOT="$($env:BOOST_ROOT)" -DRAIBLOCKS_TEST=ON ..

      cmake -G "$($env:CMAKE_GENERATOR)$($env:CMAKE_GENERATOR_SUFFIX)"   -DCMAKE_BUILD_TYPE="$($env:CONFIGURATION)" -DBOOST_ROOT="$($env:BOOST_ROOT)" -DBOOST_LIBRARYDIR="$($env:BOOST_LIBRARYDIR)" -DBOOST_INCLUDEDIR="$($env:BOOST_INCLUDEDIR)"  -DRAIBLOCKS_TEST=ON ..

build_script:
    - ps: $env:CONFIGURATION_COMPLETE=$TRUE
    - ps: cmake --build . --config "$($env:CONFIGURATION)"  -- /m /v:minimal

test_script:
  - build\core_test

deploy: off

on_failure:
  - ps: |
      # Write the CMake output and error logs to the console
      If ($env:CONFIGURATION_COMPLETE -eq "False") {
        If (Test-Path build/CMakeFiles/CMakeOutput.log) {
          Write-Output "CMakeOutput.log"
          cat build/CMakeFiles/CMakeOutput.log
        }
        If (Test-Path build/CMakeFiles/CMakeError.log) {
          Write-Output "CMakeError.log"
          cat build/CMakeFiles/CMakeError.log
        }
      }
